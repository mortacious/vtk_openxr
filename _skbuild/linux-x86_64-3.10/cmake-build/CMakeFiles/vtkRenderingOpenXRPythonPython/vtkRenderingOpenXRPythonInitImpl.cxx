// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPythonUtil.h"
#include "vtkSystemIncludes.h"
#include <cstring>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

extern "C" { void PyVTKAddFile_vtkOpenXRRenderWindow(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOpenXRRenderWindowInteractor(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOpenXRCamera(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOpenXRControlsHelper(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOpenXRModel(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOpenXRRenderer(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkOpenXRInteractorStyle(PyObject *dict); }
extern "C" { void PyVTKAddFile_vtkRenderingOpenXRModule(PyObject *dict); }

static PyMethodDef PyvtkRenderingOpenXR_Methods[] = {
{nullptr, nullptr, 0, nullptr}};

#ifdef VTK_PY3K
static PyModuleDef PyvtkRenderingOpenXR_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkRenderingOpenXR", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkRenderingOpenXR_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};
#endif

extern  "C" {VTK_ABI_EXPORT PyObject *real_initvtkRenderingOpenXR(const char * /*unused*/); }

PyObject *real_initvtkRenderingOpenXR(const char * /*unused*/)
{
#ifdef VTK_PY3K
  PyObject *m = PyModule_Create(&PyvtkRenderingOpenXR_Module);
#else
  PyObject *m = Py_InitModule("vtkRenderingOpenXR",
                              PyvtkRenderingOpenXR_Methods);
#endif

  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkRenderingOpenXR");
  }

  const char *depends[5] = {
    "vtkmodules.vtkCommonCore",
    "vtkmodules.vtkCommonMath",
    "vtkmodules.vtkRenderingCore",
    "vtkmodules.vtkRenderingOpenGL2",
    "vtkmodules.vtkRenderingVR",
  };

  for (int i = 0; i < 5; i++)
  {
    if (!vtkPythonUtil::ImportModule(depends[i], d))
    {
#ifdef VTK_PY3K
      Py_DECREF(m);
#endif
      return PyErr_Format(PyExc_ImportError,
        "Failed to load vtkRenderingOpenXR: No module named %s",
        depends[i]);
    }
  }

  if (!vtkPythonUtil::IsInitialized())
  {
#ifdef VTK_PY3K
    Py_DECREF(m);
#endif
    return PyErr_Format(PyExc_ImportError,
      "Initialization failed for vtkRenderingOpenXR, not compatible with %s",
      depends[0]);
  }

  PyVTKAddFile_vtkOpenXRRenderWindow(d);
  PyVTKAddFile_vtkOpenXRRenderWindowInteractor(d);
  PyVTKAddFile_vtkOpenXRCamera(d);
  PyVTKAddFile_vtkOpenXRControlsHelper(d);
  PyVTKAddFile_vtkOpenXRModel(d);
  PyVTKAddFile_vtkOpenXRRenderer(d);
  PyVTKAddFile_vtkOpenXRInteractorStyle(d);
  PyVTKAddFile_vtkRenderingOpenXRModule(d);

  vtkPythonUtil::AddModule("vtkRenderingOpenXR");

  return m;
}

